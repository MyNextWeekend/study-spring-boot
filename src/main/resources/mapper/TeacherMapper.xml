<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.studyspringboot.dao.TeacherMapper">

    <insert id="insertTeacher" parameterType="com.example.studyspringboot.entity.Teacher">
        INSERT INTO teacher (user_name,name,pwd,create_time,update_time) VALUES
        (#{user_name},#{name},#{pwd},Now(),Now());
    </insert>


    <!--    连表查询的方式  javaType=""指定属性的类型！集合中的泛型信息我们用ofType来获取-->
    <!--    <resultMap id="TeacherStudent" type="com.example.studyspringboot.entity.Teacher">-->
    <!--        <result property="name" column="name1"/>-->
    <!--        <result property="sex" column="sex"/>-->
    <!--        <collection property="student" ofType="com.example.studyspringboot.entity.UserInfo">-->
    <!--            <result property="user_name" column="user_name"/>-->
    <!--            <result property="name" column="name2"/>-->
    <!--            <result property="pwd" column="pwd"/>-->
    <!--        </collection>-->
    <!--    </resultMap>-->
    <!--    <select id="selectAll" resultMap="TeacherStudent">-->
    <!--        select t.name as name1 ,s.name as name2-->
    <!--        from teacher t left join user_info s on t.id = s.teacher_id;-->
    <!--    </select>-->


    <!--    子查询的方式-->
    <resultMap id="TeacherStudent" type="com.example.studyspringboot.entity.Teacher">
        <collection property="student" javaType="Arraylist" select="getStudent" column="id"/>
    </resultMap>
    <select id="getStudent" resultType="com.example.studyspringboot.entity.UserInfo">
        select * from user_info where teacher_id = #{id}
    </select>
    <select id="selectAll" resultMap="TeacherStudent">
        select * from teacher t;
    </select>

</mapper>